buildscript {
    ext.kotlin_version = "1.3.72"
    ext.tornadofx_version = "1.7.17"

    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'no.tornado:fxlauncher-gradle-plugin:1.0.21.1'
    }
}

plugins {
    id 'application'
}

apply plugin: "kotlin"
apply plugin: "application"
apply plugin: 'no.tornado.fxlauncher'

fxlauncher {
    applicationVendor 'My Company'
    applicationUrl '192.168.10.20/Hospital'
    applicationMainClass 'com.example.demo.app.MyApp'
    acceptDowngrade false
    deployTarget 'forntoh@192.168.10.20:Hospital'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'https://dl.bintray.com/kotlin/exposed'
    }
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
    maven {
        url "https://dl.bintray.com/dua3/public"
    }
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    compile "no.tornado:tornadofx:$tornadofx_version"

    // https://mvnrepository.com/artifact/org.jetbrains.exposed/exposed-core
    compile group: 'org.jetbrains.exposed', name: 'exposed-core', version: '0.25.1'
    compile group: 'org.jetbrains.exposed', name: 'exposed-dao', version: '0.25.1'
    compile group: 'org.jetbrains.exposed', name: 'exposed-jdbc', version: '0.25.1'
    compile group: 'org.jetbrains.exposed', name: 'exposed-jodatime', version: '0.25.1'
    compile group: 'org.jfxtras', name: 'jmetro', version: '8.6.12'
    compile 'no.tornado:tornadofx-controlsfx:0.1.1'

    compile 'com.google.inject:guice:4.2.3'
    // https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc
    compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.31.1'
}

mainClassName = "com.example.demo.app.MyApp"

group 'com.example.demo'
version '1.0.0-alpha04'

jar {
    manifest {
        attributes(
                "Class-Path": configurations.compile.collect { it.getName() }.join(" "),
                "Main-Class": mainClassName
        )
    }
    from(configurations.compile.collect { entry -> zipTree(entry) }) {
        exclude "META-INF/MANIFEST.MF"
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
}
